{
  "swagger": "2.0",
  "info": {
    "title": "Masterblog API",
    "version": "1.0.0"
  },
  "host": "localhost:5001",
  "basePath": "/api",
  "schemes": ["http"],
  "tags": [
    {
      "name": "Post",
      "description": "Post API - CRUD"
    }
  ],
  "paths": {
    "/posts": {
      "get": {
        "tags": ["Post"],
        "summary": "Get all posts",
        "description": "Retrieve all posts",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of posts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Post"],
        "summary": "Create a post",
        "description": "Create a new post",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Post object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/posts/{post_id}": {
      "get": {
        "tags": ["Post"],
        "summary": "Get a post by ID",
        "description": "Retrieve a single post by its ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of post to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Post found",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "put": {
        "tags": ["Post"],
        "summary": "Update a post",
        "description": "Update an existing post",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of post to update"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated post object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "delete": {
        "tags": ["Post"],
        "summary": "Delete a post",
        "description": "Delete a post by ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of post to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "title": {
          "type": "string",
          "example": "First post"
        },
        "content": {
          "type": "string",
          "example": "This is the first post."
        }
      },
      "required": ["title", "content"]
    }
  }
}
